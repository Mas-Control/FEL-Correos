services:
  db:
    container_name: db
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_HOST: db
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    profiles:
      - local
    networks:
      - control-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U controltx -d controltax"]
      interval: 1s
      timeout: 5s
      retries: 10

  fastapi:
    container_name: backend_api
    build: .
    restart: always
    ports:
      - "8000:8000"
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_NAME}
      ENV: ${ENV}
    volumes:
      - .:/app
    command: ./entrypoint.sh
    depends_on:
      db:
        condition: service_healthy
    networks:
      - control-network

volumes:
  db-data:

networks:
  control-network:
